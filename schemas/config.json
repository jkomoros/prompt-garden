{
	"type": "object",
	"properties": {
		"openai_api_key": {
			"type": "string",
			"description": "The OPENAI_API_KEY, necessary to do remote OpenAI calls"
		},
		"google_api_key": {
			"type": "string",
			"description": "The Google API key, necessary to do Google API calls"
		},
		"profile": {
			"type": "string",
			"pattern": "^[a-zA-Z0-9-_]*$",
			"description": "Which profile to use if not the default profile"
		},
		"mock": {
			"type": "boolean",
			"description": "Whether to only mock expensive, non-temporary, or remote calls"
		},
		"disallow_remote": {
			"type": "boolean",
			"description": "Whether to allow remote procedure calls in `call` even if allow_remote is set to true"
		},
		"disallow_fetch": {
			"type": "boolean",
			"description": "Whether to allow remote fetching"
		},
		"completion_model": {
			"type": "string",
			"enum": [
				"openai.com:gpt-3.5-turbo",
				"google.com:chat-bison-001"
			],
			"description": "The LLM completion model to use"
		},
		"embedding_model": {
			"type": "string",
			"enum": [
				"openai.com:text-embedding-ada-002",
				"google.com:embedding-gecko-001"
			],
			"description": "The embedding model to use"
		},
		"default_model_provider": {
			"type": "string",
			"enum": [
				"openai.com",
				"google.com"
			],
			"description": "The default model provider to use; can set completion_model and embedding_model"
		},
		"memory": {
			"type": "string",
			"pattern": "^[a-zA-Z0-9-_.]*:?[a-zA-Z0-9-_.]*$",
			"description": "The name of the memory shard to use"
		},
		"store": {
			"$ref": "#/properties/memory",
			"description": "The name of the key/value store to use"
		},
		"verbose": {
			"type": "boolean",
			"description": "How chatty the console log messages should be"
		},
		"namespace": {
			"type": "string",
			"pattern": "^[a-zA-Z0-9-_.]*$",
			"description": "The prefix to var names, stores, and memories to use by default"
		},
		"key": {
			"type": [
				"string",
				"number"
			],
			"description": "This is how map and filter will be passed in. Not typically set in environment config."
		},
		"value": {
			"anyOf": [
				{
					"anyOf": [
						{
							"type": "null"
						},
						{
							"type": "number"
						},
						{
							"type": "string"
						},
						{
							"type": "boolean"
						},
						{}
					]
				},
				{
					"type": "object",
					"additionalProperties": {
						"$ref": "#/properties/value"
					},
					"propertyNames": {
						"pattern": "^(?!type$)[a-zA-Z0-9-_.]*$"
					}
				},
				{
					"type": "array",
					"items": {
						"$ref": "#/properties/value"
					}
				}
			],
			"description": "This is how map/filter configuration is passed in. Not typically set in environment config"
		}
	},
	"additionalProperties": false,
	"$schema": "http://json-schema.org/draft-07/schema#"
}