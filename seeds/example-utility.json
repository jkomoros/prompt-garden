{
    "version": 0,
    "seeds": {
        "expect": {
            "description": "Useful for a meta-node to check at the top that required parameters are set.",
            "type": "map",
            "items": {
                "type": "var",
                "name": "arg:args"
            },
            "block": {
                "type": "var",
                "name": {
                    "type": "var",
                    "name": "value"
                },
                "else": {
                    "type": "throw",
                    "error": {
                        "type": "render",
                        "template": "Argument {{key}} is expected but was not set",
                        "vars": {
                            "key": {
                                "type": "var",
                                "name": "value"
                            }
                        }
                    }
                }
            }
        },
        "remove-numbers": {
            "description": "Useful when you get a list of items back from an LLM and it might have numbers at the front",
            "type": "array",
            "return": "last",
            "items": [
                {
                    "type": "let",
                    "name": "arg:args",
                    "value": [
                        "arg:items"
                    ],
                    "block": {
                        "seed": "expect"
                    }
                },
                {
                    "type": "join",
                    "delimiter": "\n",
                    "items": {
                        "type": "map",
                        "items": {
                            "type": "property",
                            "object": {
                                "type": "extract",
                                "template": "{{ @loop:lines }}{{index|int|optional}}{{separator|choice:'.'|choice:')'|optional}} {{content}}\n{{ @end }}",
                                "input": {
                                    "type": "var",
                                    "name": "arg:items"
                                }
                            },
                            "property": "lines"
                        },
                        "block": {
                            "type": "property",
                            "property": "content",
                            "object": {
                                "type": "var",
                                "name": "value"
                            }
                        }
                    }
                }
            ]
        },
        "memorize-items": {
            "type": "array",
            "return": "last",
            "items": [
                {
                    "type": "let",
                    "comment": "Verify that the caller set arg:items and arg:memory",
                    "name": "arg:args",
                    "value": [
                        "arg:items",
                        "arg:memory"
                    ],
                    "block": {
                        "seed": "expect"
                    }
                },
                {
                    "type": "let",
                    "name": "length",
                    "value": {
                        "type": "property",
                        "object": {
                            "type": "var",
                            "name": "arg:items"
                        },
                        "property": "length"
                    },
                    "block": 
                    {
                        "type": "map",
                        "items": {
                            "type": "var",
                            "name": "arg:items"
                        },
                        "block": {
                            "type": "array",
                            "return": "last",
                            "items": [
                                {
                                    "type": "log",
                                    "value": {
                                        "type": "render",
                                        "template": "Memorizing item {{i}}/{{length}}",
                                        "vars": {
                                            "i": {
                                                "type": "var",
                                                "name": "key"
                                            },
                                            "length": {
                                                "type": "var",
                                                "name": "length"
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "memorize",
                                    "memory": {
                                        "type": "var",
                                        "name": "arg:memory"
                                    },
                                    "value": {
                                        "type": "var",
                                        "name": "value"
                                    }
                                }
                            ]
                        }
                    }
                }
            ]
        },
        "expect-test": {
            "type": "let",
            "private": true,
            "comment": "This should throw because `not_set` is not set",
            "name": "arg:args",
            "value": [
                "openai_api_key",
                "not_set"
            ],
            "block": {
                "seed": "expect"
            }
        }
    }
}